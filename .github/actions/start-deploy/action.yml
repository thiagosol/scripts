name: "Start Deploy"
description: "Triggers the deployment by calling the API"
inputs:
  GH_TOKEN:
    description: "GitHub token to authenticate"
    required: true
  GH_USER:
    description: "GitHub user owner of the repository"
    default: "thiagosol"
  DEPLOY_URL:
    description: "Deploy service URL"
    default: "http://deploy.thiagosol.com/deploy"
  LOG_URL:
    description: "Deploy logs URL"
    default: "https://deploy.thiagosol.com/logs"
runs:
  using: "composite"
  steps:
    - name: Clone secrets repository
      run: |
        git clone https://oauth2:${{ inputs.GH_TOKEN }}@github.com/thiagosol/secrets.git
        mv secrets/secrets.json secrets.json
      shell: bash

    - name: Read secrets from JSON file
      id: secrets
      run: |
        SECRETS_ARRAY="[]"
        for key in $(jq -r 'keys_unsorted[]' secrets.json); do
          value=$(jq -r --arg key "$key" '.[$key]' secrets.json)
          echo "::add-mask::$value"
          echo "$key=$value" >> $GITHUB_ENV
          SECRETS_ARRAY=$(echo "$SECRETS_ARRAY" | jq --arg entry "$key=$value" '. + [$entry]')
        done
        SECRETS_ARRAY=$(echo "$SECRETS_ARRAY" | jq --arg entry "GITHUB_RUN_ID=${{ github.run_id }}" '. + [$entry]')
        echo "SECRETS_ENV_VARS=$(echo "$SECRETS_ARRAY" | jq -c .)" >> $GITHUB_ENV
      shell: bash

    - name: Call Deploy API
      run: |
        AUTH="${DEPLOY_USER}:${DEPLOY_PASS}"
        echo "::add-mask::$AUTH"
        RESPONSE=$(curl -s -o response.json -w "%{http_code}" -X POST "${{ inputs.DEPLOY_URL }}" \
          -u "$AUTH" \
          -H "Content-Type: application/json" \
          -d '{
            "service": "${{ github.event.repository.name }}",
            "branch": "${{ inputs.GH_USER }}",
            "env_vars": '"$SECRETS_ENV_VARS"'
          }')
        if [ "$RESPONSE" -ne 200 ]; then
          echo "‚ùå Error calling the deploy API! HTTP code: $RESPONSE"
          cat response.json
          exit 1
        fi
        echo "üöÄ Deploy started for ${{ github.event.repository.name }}!"
      shell: bash
