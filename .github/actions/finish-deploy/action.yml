name: "Finish Deploy"
description: "Waits for the server webhook and fetches the final logs"
inputs:
  GH_TOKEN:
    description: "GitHub token"
    required: true
  LOG_URL:
    description: "Deploy logs URL"
    default: "https://api-deploy.thiagosol.com/logs"
runs:
  using: "composite"
  steps:
    - name: Clone secrets repository
      run: |
        git clone https://oauth2:${{ inputs.GH_TOKEN }}@github.com/thiagosol/secrets.git
        mv secrets/secrets.json secrets.json
      shell: bash

    - name: Read secrets from JSON file
      id: secrets
      run: |
        SECRETS_ARRAY="[]"
        for key in $(jq -r 'keys_unsorted[]' secrets.json); do
          value=$(jq -r --arg key "$key" '.[$key]' secrets.json)
          echo "::add-mask::$value"
          echo "$key=$value" >> $GITHUB_ENV
          SECRETS_ARRAY=$(echo "$SECRETS_ARRAY" | jq --arg entry "$key=$value" '. + [$entry]')
        done
        echo "SECRETS_ENV_VARS=$(echo "$SECRETS_ARRAY" | jq -c .)" >> $GITHUB_ENV
      shell: bash

    - name: Fetch Deployment Logs
      run: |
        AUTH="${DEPLOY_USER}:${DEPLOY_PASS}"
        echo "::add-mask::$AUTH"

        RUN_ID="${{ github.event.client_payload.run_id }}"
        SERVICE="${{ github.event.client_payload.service }}"
        STATUS="${{ github.event.client_payload.status }}"
        MESSAGE="${{ github.event.client_payload.message }}"
        LOG_URL="${{ inputs.LOG_URL }}/$SERVICE"

        echo "üöÄ Deployment Result: $STATUS"
        echo "‚Ñπ Message: $MESSAGE"
        echo "üîó Run ID: $RUN_ID"

        echo "üü° Fetching logs from: $LOG_URL"
        LOGS=$(curl -u "$AUTH" -s "$LOG_URL")

        if [ -z "$LOGS" ]; then
          echo "‚ö†Ô∏è No logs found!"
        else
          echo "$LOGS"
        fi

        if [ "$STATUS" == "success" ]; then
          echo "‚úÖ Deployment completed successfully!"
          exit 0
        else
          echo "‚ùå Deployment failed: $MESSAGE"
          exit 1
        fi
      shell: bash
